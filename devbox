#!/bin/sh

set -o errexit

# BEGIN _functions

# @info:    Prints the ascii logo
asciiLogo ()
{
  echo '';
  echo '';
  echo '                  dddddddd                                          bbbbbbbb                                               ';
  echo '                  d::::::d                                          b::::::b                                               ';
  echo '                  d::::::d                                          b::::::b                                               ';
  echo '                  d::::::d                                          b::::::b                                               ';
  echo '                  d:::::d                                            b:::::b                                               ';
  echo '          ddddddddd:::::d     eeeeeeeeeeee  vvvvvvv           vvvvvvvb:::::bbbbbbbbb       ooooooooooo xxxxxxx      xxxxxxx';
  echo '        dd::::::::::::::d   ee::::::::::::ee v:::::v         v:::::v b::::::::::::::bb   oo:::::::::::oox:::::x    x:::::x ';
  echo '       d::::::::::::::::d  e::::::eeeee:::::eev:::::v       v:::::v  b::::::::::::::::b o:::::::::::::::ox:::::x  x:::::x  ';
  echo '      d:::::::ddddd:::::d e::::::e     e:::::e v:::::v     v:::::v   b:::::bbbbb:::::::bo:::::ooooo:::::o x:::::xx:::::x   ';
  echo '      d::::::d    d:::::d e:::::::eeeee::::::e  v:::::v   v:::::v    b:::::b    b::::::bo::::o     o::::o  x::::::::::x    ';
  echo '      d:::::d     d:::::d e:::::::::::::::::e    v:::::v v:::::v     b:::::b     b:::::bo::::o     o::::o   x::::::::x     ';
  echo '      d:::::d     d:::::d e::::::eeeeeeeeeee      v:::::v:::::v      b:::::b     b:::::bo::::o     o::::o   x::::::::x     ';
  echo '      d:::::d     d:::::d e:::::::e                v:::::::::v       b:::::b     b:::::bo::::o     o::::o  x::::::::::x    ';
  echo '      d::::::ddddd::::::dde::::::::e                v:::::::v        b:::::bbbbbb::::::bo:::::ooooo:::::o x:::::xx:::::x   ';
  echo '       d:::::::::::::::::d e::::::::eeeeeeee         v:::::v         b::::::::::::::::b o:::::::::::::::ox:::::x  x:::::x  ';
  echo '        d:::::::::ddd::::d  ee:::::::::::::e          v:::v          b:::::::::::::::b   oo:::::::::::oox:::::x    x:::::x ';
  echo '         ddddddddd   ddddd    eeeeeeeeeeeeee           vvv           bbbbbbbbbbbbbbbb      ooooooooooo xxxxxxx      xxxxxxx';
  echo '';
  echo '';
}

# @info:    Prints the usage
usage ()
{
  asciiLogo

  cat <<EOF
Usage: $0 <command> [options]

Examples:

$ ./devbox start

  > Start vagrant the vagrant machine

EOF
  exit 0
}

function addToPath() {
  
}

function start()
{
  echoInfo "Starting Somethinh"
  echoSuccess "Done."
}

function UnknownArgument()
{
  echoError "Unknown argument '$1' given"
  echo #EMPTY
  usage
}

parseCli()
{
  [ "$#" -ge 1 ] || usage

  command=$1

  case "$command" in
    "start") start
    ;;
    "alias") addToPath
    ;;
    *) UnknownArgument $1
    ;;
  esac

}


# @info:    Prints property messages
# @args:    property-message
echoProperties ()
{
  echo "\033[0;35m- $1 \033[0m"
}

# @info:    Prints success messages
# @args:    success-message
echoSuccess ()
{
  echo "\033[0;32m$1 \033[0m"
}

# @info:    Prints check messages
# @args:    success-message
echoInfo ()
{
  printf "\033[1;34m[INFO] \033[0m$1\n"
}

# @info:    Prints error messages
# @args:    error-message
echoError ()
{
  echo "\033[0;31mFAIL\n\n$1 \033[0m"
}

# @info:    Prints warning messages
# @args:    warning-message
echoWarn ()
{
  echo "\033[0;33m$1 \033[0m"
}

parseCli "$@"
